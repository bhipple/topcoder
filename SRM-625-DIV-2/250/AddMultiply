// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

class AddMultiply
{
public:
    bool check(int a, int b, int c, int y) {
        if(a == 0 || b == 0 || c == 0)
            return false;
        if(a == 1 || b == 1 || c == 1)
            return false;
        return ((a * b) + c == y);
    }

	vector <int> makeExpression(int y)
	{
        for(int a = -1000; a <= 1000; ++a) {
            for(int b = -1000; b <= 1000; ++b) {
                for(int c = -1000; c <= 1000; ++c) {
                    if(check(a, b, c, y)) {
                        vector<int> res;
                        res.push_back(a);
                        res.push_back(b);
                        res.push_back(c);
                        return res;
                    }
                }
            }
        }
		return vector <int>();
	}

};


// Edited by VimCoder 0.3.5
// http://github.com/chazmcgarvey/vimcoder